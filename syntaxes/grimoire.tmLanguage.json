{
    "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
    "name": "Grimoire",
    "patterns": [
        {
            "include": "#import"
        },
        {
            "include": "#global-keyword"
        },
        {
            "include": "#type"
        },
        {
            "include": "#assignment"
        },
        {
            "include": "#template-decl"
        },
        {
            "include": "#alias-decl"
        },
        {
            "include": "#enum-decl"
        },
        {
            "include": "#class-decl"
        },
        {
            "include": "#function-decl"
        },
        {
            "include": "#task-decl"
        },
        {
            "include": "#event-decl"
        },
        {
            "include": "#comment"
        },
        {
            "include": "#string"
        },
        {
            "include": "#block"
        }
    ],
    "repository": {
        "function-decl": {
            "begin": "\\b(function)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.function.grimoire"
                }
            },
            "end": "(?<=})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#operator"
                },
                {
                    "match": "\\b(operator)\\b",
                    "name": "keyword.control.operator.grimoire"
                },
                {
                    "match": "\\b(as)\\b",
                    "name": "keyword.control.as.grimoire"
                },
                {
                    "include": "#template-variable-list"
                },
                {
                    "include": "#where-list"
                },
                {
                    "include": "#block"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#parameter-list"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "entity.name.function.grimoire"
                }
            ]
        },
        "task-decl": {
            "begin": "\\b(task)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.function.grimoire"
                }
            },
            "end": "(?<=})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#template-variable-list"
                },
                {
                    "include": "#where-list"
                },
                {
                    "include": "#block"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#parameter-list"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "entity.name.function.grimoire"
                }
            ]
        },
        "event-decl": {
            "begin": "\\b(event)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.function.grimoire"
                }
            },
            "end": "(?<=})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#block"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#parameter-list"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "entity.name.function.grimoire"
                }
            ]
        },
        "parameter-list": {
            "begin": "\\(",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.open.grimoire"
                }
            },
            "end": "\\)",
            "endCaptures": {
                "0": {
                    "name": "punctuation.parenthesis.close.grimoire"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#type"
                },
                {
                    "begin": "(?<=,|\\(\\s*)",
                    "end": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "endCaptures": {
                        "0": {
                            "name": "storage.type.grimoire"
                        }
                    }
                },
                {
                    "name": "variable.parameter.grimoire",
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?"
                },
                {
                    "include": "#comma"
                }
            ]
        },
        "template-variable-list": {
            "begin": "<",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.bracket.angle.open.grimoire"
                }
            },
            "end": ">",
            "endCaptures": {
                "0": {
                    "name": "punctuation.bracket.angle.close.grimoire"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "name": "variable.parameter.grimoire",
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?"
                },
                {
                    "include": "#comma"
                }
            ]
        },
        "template-list": {
            "begin": "<",
            "beginCaptures": {
                "0": {
                    "name": "punctuation.bracket.angle.open.grimoire"
                }
            },
            "end": ">",
            "endCaptures": {
                "0": {
                    "name": "punctuation.bracket.angle.close.grimoire"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#type"
                },
                {
                    "name": "storage.type.grimoire",
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?"
                },
                {
                    "include": "#comma"
                }
            ]
        },
        "where-list": {
            "begin": "\\b(where)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.where.grimoire"
                }
            },
            "end": "(?={)",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#template-list"
                },
                {
                    "match": "\\b(Register|Enum|Channel|Function|Task|Callable|Class|Foreign)\\b",
                    "name": "storage.type.grimoire"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "variable.parameter.grimoire"
                },
                {
                    "include": "#comma"
                },
                {
                    "match": ":",
                    "name": "punctuation.colon.grimoire"
                }
            ]
        },
        "global-keyword": {
            "match": "\\b(public)\\b",
            "name": "storage.modifier.grimoire"
        },
        "type": {
            "patterns": [
                {
                    "match": "\\b(let|int|real|bool|string)\\b",
                    "name": "storage.type.grimoire"
                },
                {
                    "begin": "\\b(array)\\b",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.grimoire"
                        }
                    },
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "begin": "\\(",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.open.grimoire"
                                }
                            },
                            "end": "\\)",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.close.grimoire"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "\\b(task|function)\\b\\s*(?=\\()",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.grimoire"
                        }
                    },
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "begin": "\\(",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.open.grimoire"
                                }
                            },
                            "end": "\\)",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.close.grimoire"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#type"
                                },
                                {
                                    "match": ",",
                                    "name": "punctuation.comma.grimoire"
                                }
                            ]
                        }
                    ]
                },
                {
                    "begin": "\\b(channel)\\b",
                    "beginCaptures": {
                        "0": {
                            "name": "storage.type.grimoire"
                        }
                    },
                    "end": "(?<=\\))",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "begin": "\\(",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.open.grimoire"
                                }
                            },
                            "end": "\\)",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.parenthesis.close.grimoire"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#type"
                                }
                            ]
                        }
                    ]
                },
                {
                    "include": "#support-type"
                }
            ]
        },
        "assignment": {
            "begin": "=",
            "beginCaptures": {
                "0": {
                    "name": "keyword.operator.assignement.grimoire"
                }
            },
            "end": ";",
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.grimoire"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#subexpression"
                }
            ]
        },
        "block": {
            "patterns": [
                {
                    "name": "meta.block.grimoire",
                    "begin": "{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.open.grimoire"
                        }
                    },
                    "end": "}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.close.grimoire"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#block_internal"
                        }
                    ]
                }
            ]
        },
        "block_internal": {
            "patterns": [
                {
                    "include": "#expression"
                },
                {
                    "include": "#block"
                }
            ]
        },
        "import": {
            "begin": "\\b(import)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.import.grimoire"
                }
            },
            "end": "(?<=\"|})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#import-string"
                },
                {
                    "begin": "{",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.open.grimoire"
                        }
                    },
                    "end": "}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.close.grimoire"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#import-string"
                        }
                    ]
                }
            ]
        },
        "class-decl": {
            "begin": "\\b(class)\\b",
            "beginCaptures": {
                "0": {
                    "name": "storage.type.class.grimoire"
                }
            },
            "end": "(?<=})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "begin": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "beginCaptures": {
                        "0": {
                            "name": "entity.name.class.grimoire"
                        }
                    },
                    "end": "(?<={)",
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "include": "#template-variable-list"
                        },
                        {
                            "begin": ":",
                            "beginCaptures": {
                                "0": {
                                    "name": "punctuation.separator.grimoire"
                                }
                            },
                            "end": "(?<={)",
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                                    "name": "entity.other.inherited-class.grimoire"
                                },
                                {
                                    "include": "#template-list"
                                }
                            ]
                        }
                    ]
                },
                {
                    "include": "#template-variable-list"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "entity.name.class.grimoire"
                },
                {
                    "begin": "(?<={)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.open.grimoire"
                        }
                    },
                    "end": "}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.close.grimoire"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "begin": "(?=[_[:alpha:]])",
                            "end": ";",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.terminator.grimoire"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                },
                                {
                                    "include": "#global-keyword"
                                },
                                {
                                    "include": "#type"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "enum-decl": {
            "begin": "\\b(enum)\\b",
            "beginCaptures": {
                "0": {
                    "name": "storage.type.enum.grimoire"
                }
            },
            "end": "(?<=})",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "captures": {
                        "0": {
                            "name": "entity.name.class.grimoire"
                        }
                    }
                },
                {
                    "begin": "(?<={)",
                    "beginCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.open.grimoire"
                        }
                    },
                    "end": "}",
                    "endCaptures": {
                        "0": {
                            "name": "punctuation.curlybrace.close.grimoire"
                        }
                    },
                    "patterns": [
                        {
                            "include": "#comment"
                        },
                        {
                            "begin": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                            "beginCaptures": {
                                "0": {
                                    "name": "entity.name.variable.enum-member.grimoire"
                                }
                            },
                            "end": ";",
                            "endCaptures": {
                                "0": {
                                    "name": "punctuation.terminator.grimoire"
                                }
                            },
                            "patterns": [
                                {
                                    "include": "#comment"
                                }
                            ]
                        }
                    ]
                }
            ]
        },
        "alias-decl": {
            "begin": "\\b(alias)\\b",
            "beginCaptures": {
                "0": {
                    "name": "storage.type.typealias.grimoire"
                }
            },
            "end": "(?<=;)",
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#assignment"
                },
                {
                    "include": "#identifier"
                }
            ]
        },
        "template-decl": {
            "begin": "\\b(template)\\b",
            "beginCaptures": {
                "0": {
                    "name": "keyword.control.template.grimoire"
                }
            },
            "end": ";",
            "endCaptures": {
                "0": {
                    "name": "punctuation.terminator.grimoire"
                }
            },
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#template-list"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#operator"
                },
                {
                    "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?",
                    "name": "entity.name.function.grimoire"
                }
            ]
        },
        "expression": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#new"
                },
                {
                    "include": "#punctuation"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#literal"
                },
                {
                    "include": "#statement"
                },
                {
                    "include": "#as"
                },
                {
                    "include": "#support-type"
                },
                {
                    "include": "#call"
                },
                {
                    "include": "#field"
                },
                {
                    "include": "#identifier"
                },
                {
                    "include": "#numeric"
                }
            ]
        },
        "subexpression": {
            "patterns": [
                {
                    "include": "#comment"
                },
                {
                    "include": "#operator"
                },
                {
                    "include": "#new"
                },
                {
                    "include": "#comma"
                },
                {
                    "include": "#string"
                },
                {
                    "include": "#type"
                },
                {
                    "include": "#literal"
                },
                {
                    "include": "#as"
                },
                {
                    "include": "#support-type"
                },
                {
                    "include": "#call"
                },
                {
                    "include": "#field"
                },
                {
                    "include": "#identifier"
                },
                {
                    "include": "#numeric"
                }
            ]
        },
        "statement": {
            "name": "keyword.control.grimoire",
            "match": "\\b(if|unless|else|switch|select|case|default|while|until|do|loop|for|return|die|exit|yield|break|continue|try|catch|throw|defer)\\b"
        },
        "as": {
            "name": "keyword.control.grimoire",
            "match": "\\b(as)\\b"
        },
        "new": {
            "name": "keyword.other.new.grimoire",
            "match": "\\b(new)\\b"
        },
        "operator": {
            "patterns": [
                {
                    "name": "keyword.operator.arithmetic.grimoire",
                    "match": "<<|>>|=>|->|<-"
                },
                {
                    "name": "keyword.operator.logical.grimoire",
                    "match": "<=>|===|==|!=|\\>=|\\<=|\\>|\\<"
                },
                {
                    "name": "keyword.operator.assignement.grimoire",
                    "match": "\\+=|-=|\\*=|\/=|%=|\\^=|~=|="
                },
                {
                    "name": "keyword.operator.arithmetic.grimoire",
                    "match": "\\+\\+|\\+|--|-|\\*|\/|%|\\^"
                },
                {
                    "name": "keyword.operator.word.grimoire",
                    "match": "\\b(and|or|not|to|bit_and|bit_or|bit_not|bit_xor)\\b"
                }
            ]
        },
        "punctuation": {
            "patterns": [
                {
                    "include": "#comma"
                },
                {
                    "include": "#semicolon"
                }
            ]
        },
        "call": {
            "patterns": [
                {
                    "include": "#method-call"
                },
                {
                    "include": "#function-call"
                }
            ]
        },
        "function-call": {
            "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?(?=\\s*\\()",
            "captures": {
                "0": {
                    "patterns": [
                        {
                            "include": "#support-function"
                        },
                        {
                            "name": "entity.name.function.grimoire",
                            "match": "([_[:alpha:]][_[:alnum:]]*[\\?]?)"
                        }
                    ]
                }
            }
        },
        "field": {
            "match": "(\\.)\\s*([_[:alpha:]][_[:alnum:]]*[\\?]?)",
            "captures": {
                "1": {
                    "name": "punctuation.accessor.grimoire"
                },
                "2": {
                    "name": "variable.other.grimoire"
                }
            }
        },
        "method-call": {
            "match": ":{1,2}\\s*([_[:alpha:]][_[:alnum:]]*[\\?]?)",
            "captures": {
                "0": {
                    "name": "punctuation.accessor.grimoire"
                },
                "1": {
                    "patterns": [
                        {
                            "include": "#support-function"
                        },
                        {
                            "name": "entity.name.function.grimoire",
                            "match": "([_[:alpha:]][_[:alnum:]]*[\\?]?)"
                        }
                    ]
                }
            }
        },
        "import-string": {
            "name": "variable.parameter.import.grimoire",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.grimoire",
                    "match": "\\\\."
                }
            ]
        },
        "string": {
            "name": "string.quoted.double.grimoire",
            "begin": "\"",
            "end": "\"",
            "patterns": [
                {
                    "name": "constant.character.escape.grimoire",
                    "match": "\\\\."
                }
            ]
        },
        "identifier": {
            "name": "entity.name.grimoire",
            "match": "[_[:alpha:]][_[:alnum:]]*[\\?]?"
        },
        "literal": {
            "patterns": [
                {
                    "name": "variable.language.grimoire",
                    "match": "\\b(self)\\b"
                },
                {
                    "name": "constant.language.grimoire",
                    "match": "\\b(true|false|null)\\b"
                }
            ]
        },
        "numeric": {
            "patterns": [
                {
                    "name": "constant.numeric.float.grimoire",
                    "match": "([0-9]+[0-9_]*)(\\.[0-9]+)f?"
                },
                {
                    "name": "constant.numeric.float.grimoire",
                    "match": "([0-9][0-9_]*)f"
                },
                {
                    "name": "constant.numeric.float.grimoire",
                    "match": "([0-9][0-9_]*)\\.f?"
                },
                {
                    "name": "constant.numeric.float.grimoire",
                    "match": "\\.([0-9][0-9_]*)f?"
                },
                {
                    "name": "constant.numeric.integer.grimoire",
                    "match": "([0-9][0-9_]*)"
                }
            ]
        },
        "comment": {
            "patterns": [
                {
                    "name": "comment.line.double-slash.grimoire",
                    "match": "\/\/.*"
                },
                {
                    "include": "#comment-multilines"
                }
            ]
        },
        "comment-multilines": {
            "name": "comment.block.grimoire",
            "begin": "\/\\*",
            "end": "\\*\/",
            "patterns": [
                {
                    "include": "#comment-multilines"
                }
            ]
        },
        "comma": {
            "match": ",",
            "name": "punctuation.separator.comma.grimoire"
        },
        "semicolon": {
            "match": ";",
            "name": "punctuation.terminator.grimoire"
        },
        "support-constant": {
            "patterns": [
                {
                    "name": "support.variable.grimoire",
                    "match": "\\b(PI)\\b"
                }
            ]
        },
        "support-type": {
            "patterns": [
                {
                    "name": "support.class.grimoire",
                    "match": "\\b(ArrayIterator|StringIterator|RangeIterator)\\b"
                },
                {
                    "name": "support.class.grimoire",
                    "match": "\\b(HashMap|HashMapIterator)\\b"
                },
                {
                    "name": "support.class.grimoire",
                    "match": "\\b(pair|color|vec2|vec3|mat3|mat4|quat)\\b"
                },
                {
                    "name": "support.class.grimoire",
                    "match": "\\b(Entity|Light|Model|Quad)\\b"
                }
            ]
        },
        "support-function": {
            "patterns": [
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(swap|cond|typeof|assert|range|unpack|print|each|next|copy)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(time|wait|sleep|seconds|minutes|hours)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(size|empty\\?|full\\?|fill|clear|unshift|push|shift|pop|first|last|remove|slice|reverse|insert|sort|findFirst|findLast|has\\?)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(capacity)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(set|get|keys|values)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(min|max|clamp|rand|deg|rad|cos|sin|tan|acos|asin|atan|atan2|exp|log|log2|log10|sqrt|lerp|rlerp|abs|floor|ceil|round|truncate|positive\\?|negative\\?|zero\\?|invalid\\?|even\\?|odd\\?|approach)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(vec2_zero|vec2_half|vec2_one|vec2_up|vec2_down|vec2_left|vec2_right|vec3_zero|vec3_half|vec3_one|vec3_up|vec3_down|vec3_left|vec3_right|sum|sign|reflect|refract|distance|distance2|dot|cross|normal|angle|rotate|rotated|vec2_angled|magnitude|magnitude2|normalize|normalized)\\b"
                },
                {
                    "name": "support.function.grimoire",
                    "match": "\\b(position|draw)\\b"
                }
            ]
        }
    },
    "scopeName": "source.grimoire"
}